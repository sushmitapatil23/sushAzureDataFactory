{
	"name": "RemoveDuplicateDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RemoveDuplicate",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestionationOutputSinkBlob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DestionationOutputSinkBlob",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Lastaggregate"
				},
				{
					"name": "sort1"
				},
				{
					"name": "FirstValuesaggregate"
				},
				{
					"name": "sort2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          country as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(empid),",
				"     each(match(name!='empid'), $$ = last($$)),",
				"     partitionBy('hash', 1)) ~> Lastaggregate",
				"Lastaggregate sort(asc(empid, false)) ~> sort1",
				"source1 aggregate(groupBy(empid),",
				"     each(match(name!='empid'), $$ = first($$))) ~> FirstValuesaggregate",
				"FirstValuesaggregate sort(asc(empid, true)) ~> sort2",
				"sort2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['FirstValueAggregate.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['LastValueAggregate.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}