{
	"name": "MappingDataFlowEMPDEP",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmpSource",
						"type": "DatasetReference"
					},
					"name": "EmpSource"
				},
				{
					"dataset": {
						"referenceName": "DepSource",
						"type": "DatasetReference"
					},
					"name": "DepSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EMPDEPSink",
						"type": "DatasetReference"
					},
					"name": "EMPDEPSink",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "ConditionalSplitcountrywise"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          country as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpSource",
				"source(output(",
				"          depid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DepSource",
				"ConditionalSplitcountrywise@India, DepSource join(ConditionalSplitcountrywise@India@depname == DepSource@depname,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(country=='Dubai') ~> filter1",
				"DepSource aggregate(TotalEmployeeDepartmentWise = count(depname)) ~> aggregate1",
				"EmpSource split(equals(country,\"India\"),",
				"     equals(country,\"USA\"),",
				"     equals(country,\"Dubai\"),",
				"     disjoint: false) ~> ConditionalSplitcountrywise@(India, USA, Dubai, Other)",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          country,",
				"          depname = DepSource@depname",
				"     )) ~> EMPDEPSink"
			]
		}
	}
}