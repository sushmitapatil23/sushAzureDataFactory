{
	"name": "Rankingdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceInputBlob",
						"type": "DatasetReference"
					},
					"name": "EmpSalary"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestionationOutputSinkBlob",
						"type": "DatasetReference"
					},
					"name": "denseranksink"
				},
				{
					"dataset": {
						"referenceName": "DestionationOutputSinkBlob",
						"type": "DatasetReference"
					},
					"name": "ranksink"
				}
			],
			"transformations": [
				{
					"name": "rank"
				},
				{
					"name": "Denserank"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as short,",
				"          empname as string,",
				"          country as string,",
				"          depname as string,",
				"          salary as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 20,",
				"     ignoreNoFilesFound: false) ~> EmpSalary",
				"EmpSalary rank(asc(salary, true),",
				"     caseInsensitive: true,",
				"     output(Rankcolumn as long)) ~> rank",
				"EmpSalary rank(asc(salary, true),",
				"     caseInsensitive: true,",
				"     output(DenseRankcolumn as long),",
				"     dense: true) ~> Denserank",
				"Denserank sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['DenseRankSink.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> denseranksink",
				"rank sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['RankSink.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ranksink"
			]
		}
	}
}