{
	"name": "Lookupdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmpSource",
						"type": "DatasetReference"
					},
					"name": "Empsource"
				},
				{
					"dataset": {
						"referenceName": "DepSource",
						"type": "DatasetReference"
					},
					"name": "Depsource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestionationOutputSinkBlob",
						"type": "DatasetReference"
					},
					"name": "LookupSort"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          country as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Empsource",
				"source(output(",
				"          depid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Depsource",
				"Empsource, Depsource lookup(Empsource@depname == Depsource@depname,",
				"     multiple: true,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 sort(asc(empname, false)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['LookupSort.txt'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> LookupSort"
			]
		}
	}
}