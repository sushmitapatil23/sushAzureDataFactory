{
	"name": "SwitchActivityPipeline",
	"properties": {
		"activities": [
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('Get Metadata1').output",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "File1",
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceBlobFile1",
											"type": "DatasetReference",
											"parameters": {
												"FileName1": {
													"value": "@pipeline().parameters.FileName1",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationBlobFile1",
											"type": "DatasetReference"
										}
									]
								}
							]
						},
						{
							"value": "File2",
							"activities": [
								{
									"name": "Copy data2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceBlobFile1",
											"type": "DatasetReference",
											"parameters": {
												"FileName1": "File2.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationBlobFile2",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SourceBlobFile1",
						"type": "DatasetReference",
						"parameters": {
							"FileName1": "File1.txt"
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			}
		],
		"parameters": {
			"FileName1": {
				"type": "string",
				"defaultValue": "File1.txt"
			},
			"FileName2": {
				"type": "string",
				"defaultValue": "File2.txt"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-02-02T19:30:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}